inherit_from: .rubocop_todo.yml

# Please:
#
# - Comment any deviations from the Ruby Style Guide
# - Alphabetize cops
# - Only include permanent config; temporary goes in .rubocop_todo.yml

# We do not control `schema.rb`. Exclude it from all cops.
AllCops:
  Exclude:
    - test/dummy/db/schema.rb

Metrics/ClassLength:
  Exclude:
    - test/**/*

# The Ruby Style Guide recommends to "Limit lines to 80 characters."
# (https://github.com/bbatsov/ruby-style-guide#80-character-limits)
# but 100 is also reasonable.
Metrics/LineLength:
  Max: 100

# Migrations often contain long up/down methods, and extracting smaller methods
# from these is of questionable value.
Metrics/MethodLength:
  Exclude:
    - 'test/dummy/db/migrate/*'

Style/AlignParameters:
  EnforcedStyle: with_fixed_indentation

# Please use semantic style, e.g. `do` when there's a side-effect, else `{}`.
# The semantic style is too nuanced to lint, so the cop is disabled.
Style/BlockDelimiters:
  Enabled: false

Style/DotPosition:
  EnforcedStyle: trailing

# Use double negation wherever it would otherwise be impractical to convert
# a value to an actual boolean.
Style/DoubleNegation:
  Enabled: false

# The decision of when to use a guard clause to improve readability is subtle,
# and it's not clear that it can be linted. Certainly, the default
# `MinBodyLength` of 1 can actually hurt readability.
Style/GuardClause:
  MinBodyLength: 3

# The Ruby Style Guide says:
#
# > Use \ instead of + or << to concatenate two string literals at line end.
#
# but in my experience the `\` style is rarely used and less readable. Please
# concatenate multiline strings with `+` or use a HEREDOC.
Style/LineEndConcatenation:
  Enabled: false

Style/MultilineMethodCallIndentation:
  EnforcedStyle: indented

Style/MultilineOperationIndentation:
  EnforcedStyle: indented

Style/PredicateName:
  NameWhitelist: has_paper_trail

# The Ruby Style Guide does not prescribe a particular quote character, only
# that a project should pick one and be consistent. The decision has no
# performance implications. Double quotes are slightly easier to read.
Style/StringLiterals:
  EnforcedStyle: double_quotes
